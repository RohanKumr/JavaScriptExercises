/**
*   @Recursion
*/

function sum(arr, n) {
	if ( n=== 0 ) return 0; // 0 because 0 + x = x
	return arr[n-1] + sum(arr, n - 1) 
}

console.log(sum([2, 3, 4], 2))

/**  Execution
*	n = 2
*	a[2-1] = a[1] = 3
*	3 + run sum(n-1)
*	n = 1 
*	a[1-1] =a[0] = 2
*	3 + 2 = 5 + run sum(n-1)
*	n = 0
*	5 + 0 = 5 
*	ans = 5 
*/



const computeArr = (arr) => {
	if (arr.length === 1) return arr[0];
	return arr.pop() + computeArr(arr);
}

console.log(computeArr([7, 8, 9 ,99]))

// ----------
// result 123
// iterations 
// [7, 8, 9 ,99]
// [7, 8, 9]
// [7, 8,]
// [7]
